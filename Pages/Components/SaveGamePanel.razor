@using NarrAItor.Services
@inject GameClientService GameClientService

<div class="save-panel bg-gray-800 text-green-400 p-4 rounded-lg">
    @if (showSaveInput)
    {
        <div class="flex gap-2 mb-4">
            <input type="text"
                   @bind="saveTitle"
                   @bind:event="oninput"
                   class="flex-1 bg-gray-900 border border-green-400 rounded px-2 py-1 text-green-400"
                   placeholder="Adventure title..."/>
            <button @onclick="SaveCurrentGame"
                    class="px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700">
                Save
            </button>
            <button @onclick="() => showSaveInput = false"
                    class="px-3 py-1 bg-gray-600 text-white rounded hover:bg-gray-700">
                Cancel
            </button>
        </div>
    }
    else
    {
        <button @onclick="() => showSaveInput = true"
                class="w-full px-3 py-1 mb-4 bg-green-600 text-white rounded hover:bg-green-700">
            Save Game
        </button>
    }

    @if (savedGames.Any())
    {
        <div class="saved-games-list space-y-2">
            @foreach (var save in savedGames)
            {
                <div class="flex items-center justify-between p-2 bg-gray-900 rounded">
                    <div class="flex flex-col">
                        <span class="font-medium">@save.Title</span>
                        <span class="text-xs text-gray-400">
                            @save.Theme | @save.SaveDate.ToLocalTime().ToString("g")
                        </span>
                    </div>
                    <div class="flex gap-2">
                        <button @onclick="() => LoadGame(save.GameId)"
                                class="px-2 py-1 bg-blue-600 text-white rounded hover:bg-blue-700">
                            Load
                        </button>
                        <button @onclick="() => DeleteGame(save.GameId)"
                                class="px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700">
                            Delete
                        </button>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-gray-400">No saved games found.</p>
    }
</div>

@code {
    private string saveTitle = "";
    private bool showSaveInput;
    private IEnumerable<SavedGameInfo> savedGames = Array.Empty<SavedGameInfo>();

    [Parameter]
    public required GameState CurrentGame { get; set; }

    [Parameter]
    public EventCallback<GameState> OnGameLoaded { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await RefreshSavedGames();
    }

    private async Task RefreshSavedGames()
    {
        savedGames = await GameClientService.GetSavedGames();
        StateHasChanged();
    }

    private async Task SaveCurrentGame()
    {
        if (await GameClientService.SaveGame(CurrentGame, saveTitle))
        {
            showSaveInput = false;
            saveTitle = "";
            await RefreshSavedGames();
        }
    }

    private async Task LoadGame(string gameId)
    {
        var loadedGame = await GameClientService.LoadGame(gameId);
        await OnGameLoaded.InvokeAsync(loadedGame);
    }

    private async Task DeleteGame(string gameId)
    {
        if (await GameClientService.DeleteGame(gameId))
        {
            await RefreshSavedGames();
        }
    }

}